member = list(name= c("홍길동","이순신"), age =c(12,13))
member
data.frame(member)
typeof(a)
mode(a)
clas(a)
class(a)
member['name']
member[name]
member$name
member$name[0]
member$name[1]
names$[1]
names$[[1]]
a$name
# 2) key = value
member = list(name= c("홍길동","이순신"), age =c(12,13))
member$name[1]
a = data.frame(member)
class(a)
a$name
a = data.frame(member)
a
a$name
a$age
plot(pt , col="blue" ,type="o")
plot(pt , col="blue" ,type="o")
# 02. product 데이터셋을 이용하여 다음과 같은 단계로 다중회귀분석을 수행하시오.
setwd("c:/dev/Rwork/data")
product <- read.csv("product.csv", header=TRUE)
product
#  단계1 : 학습데이터(train),검정데이터(test)를 7 : 3 비율로 샘플링
idx <- sample(nrow(product), nrow(product)*0.7 ,replace =FALSE)
train <- product[idx,]
test <- product[-idx,]
model <- lm(제품_만족도 ~ . ,data =train)
summary(model)
#  단계3 : 검정데이터 이용 모델 예측치 생성
py <- predict(model,test)
pt <- test$제품_만족도
#  단계4 : 모델 평가 : cor()함수 이용
mean((py-pt)^2)
cor(py,pt)
plot(pt , col="blue" ,type="o")
plot(pt, col="blue" ,type="o")
pt <- test$제품_만족도
pt
py
# 02. product 데이터셋을 이용하여 다음과 같은 단계로 다중회귀분석을 수행하시오.
setwd("c:/dev/Rwork/data")
product <- read.csv("product.csv", header=TRUE)
product
library(ggplot2)
data(mpg)
mpg
x <- mpg$'displ'
y <- mpg$'hwy'
df <- data.frame(x, y)
mpg_model <- lm(y~ x, data = df)
mpg_model
plot(df$x, df$y)
# text 추가
text(df$x, df$y, labels = df$y,
cex=0.7, pos=2, col = 'red')
abline(mpg_model, col='blue')
summary(mpg_model)
# 02. product 데이터셋을 이용하여 다음과 같은 단계로 다중회귀분석을 수행하시오.
setwd("c:/dev/Rwork/data")
product <- read.csv("product.csv", header=TRUE)
product
#  단계1 : 학습데이터(train),검정데이터(test)를 7 : 3 비율로 샘플링
idx <- sample(nrow(product), nrow(product)*0.7 ,replace =FALSE)
product <- read.csv("c:/dev/Rwork/data/product.csv", header=TRUE)
a <-c(1:100)
a[50:60]
length(a[50:60])
a[(length(a)-5):length(a)]
a[length(a)-5:length(a)]
a[(length(a)-5):length(a)]
a[a>10 & a<40]
m1 = matrix(c(1:27),nrow = 3)
dim(m1)
rbind(x1,x2)
cbind(x1,x2)
x <- matrix(1:9,nrow =3 , ncol =3 ,byrow =TRUE)
x
y <- matrix(rep(1,6),nrow=2,byrow=FALSE)
y
# vector vs matrix
x <- 1:3
y <- matrix(rep(1,6),nrow=2,byrow=FALSE)
y
dim(y)
z <- y*x
z
# list 서로다른 자료형과 자료구조를 갖는 자료구조(1,2,3)이다
# key value 구조
lst1<- list('lee',"이순신",34)
lst1
# [[1]] -> key
# [1] lee->value
lst1[[1]]  # key를 가지고  value 접근
lst1[1]  # index를 가지고 key value
# [[1]] -> key
# [1] lee->value
lst1[[1]]  # key를 가지고  value 접근
lst1[1]  # index를 가지고 key value
lst2<- list('a'=c(1,2,3),"이순신",34)
lst2
lst2$a[1]
lst2$a
names <- str_extract_all(str,"[가-힣]{1}")
library(stringr)
str <- "김 12 이 13 디 14"
names <- str_extract_all(str,"[가-힣]{1}")
class(names)
names[[1]][1]
names[[1]]
names[[1]][1]
names[[2]][1]
names[[0]][1]
names[[1]][1]
# (1) write.csv() : , 구분자
str(titanic)
# (4) 인터넷 파일 읽기
titanic <- read.csv("https://vincentarelbundock.github.io/Rdatasets/csv/COUNT/titanic.csv")
titanic
str(titanic)
titanic[-1]
titanic[-1]
titanic
vec<-1:10
prod(vec) # 데이터의 곱
sd(rnorm(10)) # 표준편차 구하기
string <- "홍길동35 이순신45 유관순 25"
library(stringr)
library(help="stringr")
string <- "홍길동35 이순신45 유관순 25"
name <- str_extract_all(string,"[가-힣]{3}")
name # 홍길동 이순신 유관순 list
names <- unlist(name) # list -> vector
names
data
# 1)기본 내장함수
data <- runif(21,min=0,max=100)
data
min(data)
range(data)
median(data)
data
sort(data)[length(data)/2]
idx <- order(head(iris$Sepal.Length)) # index 반환
idx
# colunm 단위
sort(head(iris$Sepal.Length)) # 내용 반환
# 이항분포를 따르는 난수 생성
# rbinom(n,size,prob)
# size :sample size , prob : 확률
r3 <- rbinom(10,size=1,prob= 0.5)
r4 <- rbinom(10,size=1,prob= 0.25)
# 차트 데이터 생성
chart_data <- c(305,450, 320, 460, 330, 480, 380, 520)
names(chart_data) <- c("2016 1","2017 1","2016 2","2017 2","2016 3","2017 3","2016 4","2017 4")
str(chart_data)
chart_data
# 세로
barplot(chart_data, ylim=c(0,600), col=c("green","red"),main="분기별 매출")
# 가로
barplot(chart_data, Xlim=c(0,600), col=rainbow(8),horiz=TRUE,main="분기별 매출")
par(mfrow=c(1,2))
# 개별
barplot(VADeaths, beside=T,col=rainbow(5),main="미국 버지니아주 하위계층 사망비율")
# 누적
barplot(VADeaths, beside=F,col=rainbow(5),main="미국 버지니아주 하위계층 사망비율")
legend(19, 71, c("50-54","55-59","60-64","65-69","70-74"), cex=0.8,fill=rainbow(5))
# 2) 점차트 시각화
par(mfrow=c(1,1))
par(c(1,1))
# 2) 점차트 시각화
par(mfrow=c(1,1))
# 2) 점차트 시각화
par(mfrow=c(1,1))
dotchart(chart_data,color=c("green","red"),labels=names(chart_data),xlab ="매출액",main="분기별매출출")
# 3) 파이 차트 시각화
pie(chart_data , labels = names(chart_data),color=c("green","red"), cex = 1.5)
title("2016 vs 2017 판매현황")
# 연속변수
# 1) boxplot
VADeaths
str(VADeaths)
summary(VADeaths)
boxplot(VADeaths,range=1000)
# 2) histogram
iris
library(HistData)
data(Galton)
str(Galton)
HistData::Galton
model <- lm(child ~ parent, data=Galton)
model
plot(model)
methods(plot)
plot(model)
# 2. 이상치 발견과 정제
#(1) 범주형(명목 , 서열) 극단치 처리
gender <- dataset$gender
gender
table(gender)
pie(table(gender))
dataset <- subset(dataset,gender==1 | gender==2)
# 이상치 발견
boxplot(price)$stats
#(2) 비율척도 연속형 이상치 처리
price <- dataset$price
plot(price)
dataset <- subset(dataset,gender==1 | gender==2)
#(2) 비율척도 연속형 이상치 처리
price <- dataset$price
plot(price)
# 이상치 발견
boxplot(price)$stats
library(lattice)
colnames(new_data)
# 직업유형에 따른 나이 분포 현황
densityplot( ~ age, data=new_data, groups = job2,
plot.points=T, auto.key = T)
# (1) 성별에 따른 직급별 구매비용 분석
densityplot(~ price | factor(gender2), data=new_data,
groups = position2, plot.points=T, auto.key = T)
# 2) 비율척도(연속) vs 명목척도(범주/서열)
# - 나이와 직업유형에 따른 시각화
install.packages("lattice")  # chap08
install.packages("lattice")
library(lattice)
colnames(new_data)
# 직업유형에 따른 나이 분포 현황
densityplot( ~ age, data=new_data, groups = job2,
plot.points=T, auto.key = T)
# (1) 성별에 따른 직급별 구매비용 분석
densityplot(~ price | factor(gender2), data=new_data,
groups = position2, plot.points=T, auto.key = T)
colnames(new_data)
new_data <- read.csv("new_data.csv", header=TRUE)
# 1) 명목척도(범주/서열) vs 명목척도(범주/서열)
# - 거주지역과 성별 칼럼 시각화
resident_gender <- table(new_data$resident2, new_data$gender2)
resident_gender
gender_resident <- table(new_data$gender2, new_data$resident2)
gender_resident
# 성별에 따른 거주지역 분포 현황
barplot(resident_gender, beside=T, horiz=T,
col = rainbow(5),
legend = row.names(resident_gender),
main = '성별에 따른 거주지역 분포 현황')
# 거주지역에 따른 성별 분포 현황
barplot(gender_resident, beside=T,
col=rep(c(2, 4),5), horiz=T,
legend=c("남자","여자"),
main = '거주지역별 성별 분포 현황')
setwd("c:/Rwork/data")
new_data <- read.csv("new_data.csv", header=TRUE)
# 1) 명목척도(범주/서열) vs 명목척도(범주/서열)
# - 거주지역과 성별 칼럼 시각화
resident_gender <- table(new_data$resident2, new_data$gender2)
resident_gender
gender_resident <- table(new_data$gender2, new_data$resident2)
gender_resident
# 성별에 따른 거주지역 분포 현황
barplot(resident_gender, beside=T, horiz=T,
col = rainbow(5),
legend = row.names(resident_gender),
main = '성별에 따른 거주지역 분포 현황')
# 거주지역에 따른 성별 분포 현황
barplot(gender_resident, beside=T,
col=rep(c(2, 4),5), horiz=T,
legend=c("남자","여자"),
main = '거주지역별 성별 분포 현황')
# 2) 비율척도(연속) vs 명목척도(범주/서열)
# - 나이와 직업유형에 따른 시각화
install.packages("lattice")  # chap08
install.packages("lattice")
colnames(new_data)
# 직업유형에 따른 나이 분포 현황
densityplot( ~ age, data=new_data, groups = job2,
plot.points=T, auto.key = T)
library(lattice)
colnames(new_data)
# 직업유형에 따른 나이 분포 현황
densityplot( ~ age, data=new_data, groups = job2,
plot.points=T, auto.key = T)
# (1) 성별에 따른 직급별 구매비용 분석
densityplot(~ price | factor(gender2), data=new_data,
groups = position2, plot.points=T, auto.key = T)
CrossTable(x=df$Level , y=df$Pass)
# 2) package 이용
install.packages("gmodels")
library(help="gmodels")
CrossTable(x=df$Level , y=df$Pass)
CrossTable(x=df$Level , y=df$Pass)
################################
# 1. 교차분석
################################
# - 범주형(명목척도, 서열척도)
df <-data.frame(Level = x , Pass = y)
df
# 1) 교차분할표
table(df$Level, df$Pass) # (행 , 열)
# 통계지식 : 가설 , 검정 , 유의확률 , 유의수준
setwd("c:/Rwork/data")
data <- read.csv("cleanDescriptive.csv")
str(data)
# 변수 선택
x <- data$level2 # 학력수준
y <- data$pass2 # 합격 유무
table(x)
table(y)
################################
# 1. 교차분석
################################
# - 범주형(명목척도, 서열척도)
df <-data.frame(Level = x , Pass = y)
df
# 1) 교차분할표
table(df$Level, df$Pass) # (행 , 열)
CrossTable(x=df$Level , y=df$Pass)
# 기대비율(고졸 vs 합격 = 0.363)
# 1) 기대값 =  (셀의행합 * 셀의열합) /전체합
p_value =  89 * 135 / 225
p_value # 53.4
# 2) 기대비율 = (관측값 - 기댓값)^2 / 기댓값
p_rate = (49-p_value)^2 / p_value
library("gmodels")
CrossTable(x=df$Level , y=df$Pass)
# 귀무가설 : 부모의 학력 수준이 자녀의 대학진학에 영항을 미치지않는다.
CrossTable(x=df$Level,y=df$Pass,chisq = TRUE)
chisq.test(c(4,6,17,16,8,9))
CrossTable(x, y, chisq = TRUE) #p =  0.2507057
# 1. 파일 가져오기
setwd("C:/SUNMOON/Rwork-I/Part-III")
data <- read.csv("homogenity.csv", header=TRUE)
head(data)
# method와 survery 변수만 서브셋 생성
data <- subset(data, !is.na(survey), c(method, survey))
data
table(data$method)
# 교육방법2 필드 추가
data$method2[data$method==1] <- "방법1"
data$method2[data$method==2] <- "방법2"
data$method2[data$method==3] <- "방법3"
# 만족도2 필드 추가
data$survey2[data$survey==1] <- "매우만족"
data$survey2[data$survey==2] <- "만족"
data$survey2[data$survey==3] <- "보통"
data$survey2[data$survey==4] <- "불만족"
data$survey2[data$survey==5] <- "매우불만족"
# 3. 교차분할표 작성
table(data$method2, data$survey2)  # 교차표 생성 -> table(행,열)
# 4. 동질성 검정 - 모수 특성치에 대한 추론검정
chisq.test(data$method2, data$survey2)
library(dplyr)
# dataset %>% function()
iris %>% group_by(Species) %>% summarise(avg = mean(Sepal.Length))
binom.test(14,150,0.2,alternative = "two.sided" , conf.level = 0.95)
t.test(x,mu=5.2,alternative = "greater")
# 1) data 가져오기
data <- read.csv("one_sample.csv")
str(data)
# 2) 데이터 전처리  이상치 결측치 제거
time <- data$time
mean(time, na.rm=T)
x <- na.omit(time)
length(x)
# 3) 전제조건
shapiro.test(x)
# 4) 단일지단 평균차이 검정
t.test(x,mu=5.2)
t.test(x,mu=5.2,alternative = "greater")
t.test(x,mu=5.2,alternative = "less")
t.test(x,mu=5.2,alternative = "greater")
# 3) 두집단 비율차이검정 - prop.test()
c(110,135)
# 2-1 두집단 비율차이 검정
# 1) 실습데이터 가져오기
getwd()
data <- read.csv("two_sample.csv", header=TRUE)
data
head(data) # 변수명 확인
# 2) 두집단 SUBSET 작성
data$method # 1, 2 -> 노이즈 없음
data$survey # 1(만족), 0(불만족)
# 데이터 정체/전처리
x<- data$method # 교육방법(1, 2) -> 노이즈 없음
y<- data$survey # 만족도(1: 만족, 0:불만족)
table(x,y)
# dataset 가져오기
product <- read.csv("product.csv")
str(product)
cor(product,method="pearson")
cor(x= product$제품_친밀도, y =product$제품_만족도,method="pearson")
library(corrplot)
corrplot(corr = cor(product),method ="number")
corrplot(corr = cor(product),method ="circle")
# R-squared = R^2
R <- sqrt(0.5865)
R
# R-squared = R^2
R <- sqrt(2)
R
0.5865
# 1. 변수 모델링 : y:Sepal.Length <- x:Sepal.Width,Petal.Length,Petal.Width
formula = Sepal.Length ~ Sepal.Width + Petal.Length + Petal.Width
# 2. 회귀모델 생성
model <- lm(formula = formula,  data=iris)
model
names(model)
# 3. 모형의 잔차검정
plot(model)
# (1) 등분산성 검정
plot(model, which =  1)
methods('plot') # plot()에서 제공되는 객체 보기
# 정규성 시각화
hist(res, freq = F)
qqnorm(res)
# (2) 잔차 정규성 검정
attributes(model) # coefficients(계수), residuals(잔차), fitted.values(적합값)
res <- residuals(model) # 잔차 추출 = model$residuals
shapiro.test(res) # 정규성 검정 - p-value = 0.9349 >= 0.05
# 정규성 시각화
hist(res, freq = F)
qqnorm(res)
# (4) 잔차의 독립성(자기상관 검정 : Durbin-Watson)  # 독립변수 간의 강한 상관관계
install.packages('lmtest')
# 4. 다중공선성 검사
library(car)
sqrt(vif(model)) > 2 # TRUE
# 5. 모델 생성/평가
formula = Sepal.Length ~ Sepal.Width + Petal.Length
# 4. 다중공선성 검사
library(car)
sqrt(vif(model)) > 2 # TRUE
dwtest(model) # 더빈 왓슨 값
library(lmtest) # 자기상관 진단 패키지 설치
dwtest(model) # 더빈 왓슨 값
seq(10,5,-2)
# list$key  data.frame$column
iris
subset(iris,Sepal.Length >4)
a = [[1,2,3],[2,3,4]]
source('C:/Rwork/script/chap02_datastructure.R', encoding = 'UTF-8', echo=TRUE)
x <- matrix(1:9,nrow =3 , ncol =3 ,byrow =TRUE)
x
x <- matrix(1:26,nrow =3  ,byrow =TRUE)
x
x
x[4:6,1:3]
x[4:6,1]
x[4:6]
x[4:6][1]
x[,4:6]
x[1:2,4:6]
x[1:3,4:6]
data("airquality")
aid_df <- airquality[-c(5:6)]
air_df <- airquality[-c(5:6)]
str(air_df)
model <- lm(Ozone ~ . ,data=air_df)
model
summary(model)
model <- lm(formula = formula,  data=iris)
summary(model) # 모델 평가
data("airquality")
air_df <- airquality[-c(5:6)]
str(air_df)
model <- lm(Ozone ~ . ,data=air_df)
summary(model)
model.fitted.values
names(model)
model['fitteds.values']
model <- lm(Ozone ~ . ,data=air_df)
summary(model)
model['fitteds.values']
model['fitted.values']
model['effects']
# 정규성 시각화
hist(res, freq = F)
qqnorm(res)
# 정규성 시각화
hist(res, freq = F)
res <- residuals(model) # 잔차 추출 = model$residuals
shapiro.test(res) # 정규성 검정 - p-value = 0.9349 >= 0.05
# 정규성 시각화
hist(res, freq = F)
# 귀무가설 : 정규성과 차이가 없다.
plot(res)
없다.
x <- c(2,4,5,3)
y <- c(20,25,15,30)
xy <- cbind(x,y)
xy[,1]
x
xy[2,]
xy
subset(iris,Sepal.Length >4 & Petal.Length >=10.2)
subset(iris,Sepal.Length >4 & Petal.Length >=1.2)
subset(iris,Sepal.Length >4 & Petal.Length >=10.2)
dotchart(chart_data,color=c("green","red"),labels=names(chart_data),xlab ="매출액",main="분기별매출출")
data("airquality")
air_df <- airquality[-c(5:6)]
str(air_df)
model <- lm(Ozone ~ . ,data=air_df)
summary(model)
model['effects']
