model <- lm(child ~ parent, data=Galton)
model
plot(model)
plot(model)
plot(model)
methods(plot)
pairs(iris[1:4])
# 꽃의 종별 변수 비교
unique(iris$Species)
iris
pairs(iris[iris$Species,1:4])
pairs(iris[iris$Species=='virginica',1:4])
# 4.차트 파일 저장
setwd("c:/Rwork/data/output")
jpeg("iris.jpg")
jpeg("iris.jpg",width=720,heigth=480)
plot(iris$Sepal.Length , iris$Sepal.Width)
title("iris data")
dev.off()
jpeg("iris.jpg",width=720,height=480)
plot(iris$Sepal.Length , iris$Sepal.Width)
title("iris data")
dev.off()
iris_setosa
install.packages('scatterplot3d')
library(scatterplot3d)
iris_setosa
# 꽃의 종류별 분류
iris_setosa = iris[iris$Species == 'setosa',]
iris_versicolor = iris[iris$Species == 'versicolor',]
iris_virginica = iris[iris$Species == 'virginica',]
# scatterplot3d(밑변, 오른쪽변, 왼쪽변, type='n') # type='n' : 기본 산점도 제외
d3 <- scatterplot3d(iris$Petal.Length, iris$Sepal.Length, iris$Sepal.Width, type='n')
d3$points3d(iris_setosa$Petal.Length, iris_setosa$Sepal.Length,
iris_setosa$Sepal.Width, bg='orange', pch=21)
d3$points3d(iris_versicolor$Petal.Length, iris_versicolor$Sepal.Length,
iris_versicolor$Sepal.Width, bg='blue', pch=23)
d3$points3d(iris_virginica$Petal.Length, iris_virginica$Sepal.Length,
iris_virginica$Sepal.Width, bg='green', pch=25)
iris_setosa
# 꽃의 종류별 분류
iris_setosa = iris[iris$Species == 'setosa',]
iris_versicolor = iris[iris$Species == 'versicolor',]
iris_virginica = iris[iris$Species == 'virginica',]
# scatterplot3d(밑변, 오른쪽변, 왼쪽변, type='n') # type='n' : 기본 산점도 제외
d3 <- scatterplot3d(iris$Petal.Length, iris$Sepal.Length, iris$Sepal.Width, type='n')
# 01.  iris 데이터 셋을 대상으로 다음 조건에 맞게 시각화 하시오.
iris
# 조건1) 1번 컬럼 x축, 3번 컬럼 y축으로 차트 작성(힌트 : plot(x, y)
plot(iris[,1],iris[.3])
# 조건1) 1번 컬럼 x축, 3번 컬럼 y축으로 차트 작성(힌트 : plot(x, y)
plot(iris[,1],iris[,3])
# 조건2) 5번 컬럼으로 색상 지정(힌트 : plot(x, y, col=컬럼)
plot(iris[,5],col=red)
# 조건2) 5번 컬럼으로 색상 지정(힌트 : plot(x, y, col=컬럼)
plot(iris[,5],col='red')
# 조건2) 5번 컬럼으로 색상 지정(힌트 : plot(x, y, col=컬럼)
plot(iris[,1],iris[,3],col=c("red","green"))
# 조건2) 5번 컬럼으로 색상 지정(힌트 : plot(x, y, col=컬럼)
plot(iris[,1],iris[,3],col=c("red","green","blue"))
# 조건2) 5번 컬럼으로 색상 지정(힌트 : plot(x, y, col=컬럼)
plot(iris[,1],iris[,3],col=c("red","green","blue","black"))
# 조건2) 5번 컬럼으로 색상 지정(힌트 : plot(x, y, col=컬럼)
plot(iris[,1],iris[,3],col=c("red","green","blue","black","yellow"))
# 조건3) "iris 데이터 테이블 산포도 차트" 제목 추가(힌트 : title("차트 제목")
title("iris 데이터 테이블 산포도 차트")
# 조건1) 1번 컬럼 x축, 3번 컬럼 y축으로 차트 작성(힌트 : plot(x, y)
plot(iris[,1],iris[,3])
# 조건2) 5번 컬럼으로 색상 지정(힌트 : plot(x, y, col=컬럼)
plot(iris[,1],iris[,3],col=c("red","green","blue","black","yellow"))
# 조건1) 1번 컬럼 x축, 3번 컬럼 y축으로 차트 작성(힌트 : plot(x, y)
plot(iris[,1],iris[,3])
# 조건2) 5번 컬럼으로 색상 지정(힌트 : plot(x, y, col=컬럼)
plot(iris[,1],iris[,3],col=c("red","green","blue","black","yellow"))
# 조건2) 5번 컬럼으로 색상 지정(힌트 : plot(x, y, col=컬럼)
plot(iris[,1],iris[,3],col=c("red","green","blue","black"))
# 01.  iris 데이터 셋을 대상으로 다음 조건에 맞게 시각화 하시오.
iris$Species
# 01.  iris 데이터 셋을 대상으로 다음 조건에 맞게 시각화 하시오.
str(iris$Species)
# 01.  iris 데이터 셋을 대상으로 다음 조건에 맞게 시각화 하시오.
summary(iris$Species)
# 조건2) 5번 컬럼으로 색상 지정(힌트 : plot(x, y, col=컬럼)
plot(iris[,1],iris[,3],col=c("red","green","blue")
# 조건2) 5번 컬럼으로 색상 지정(힌트 : plot(x, y, col=컬럼)
plot(iris[,1],iris[,3],col=c("red","green","blue"))
# 조건2) 5번 컬럼으로 색상 지정(힌트 : plot(x, y, col=컬럼)
plot(iris[,1],iris[,3],col=c("red","green","blue"))
# 조건3) "iris 데이터 테이블 산포도 차트" 제목 추가(힌트 : title("차트 제목")
title("iris 데이터 테이블 산포도 차트")
# 02. 다음과 같은 단계별로 히스토그램 시각화하시오.
#  단계1) 표준정규분포를 따르는 난수 1,000개 생성(힌트 : rnorm() 함수 이용)
test <- rnorm(1000,0,1)
#  단계2) 히스토그램 시각화(각 계급의 밀도)
hist(test)
shapiro.test(test)
iris$Species
# 조건2) 5번 컬럼으로 색상 지정(힌트 : plot(x, y, col=컬럼)
plot(iris[,1],iris[,3],col=iris$Species)
#  단계2) 히스토그램 시각화(각 계급의 밀도)
hist(test,freq=FALSE)
hist(test)
#  단계2) 히스토그램 시각화(각 계급의 밀도)
hist(test,freq=FALSE)
hist(test)
#  단계2) 히스토그램 시각화(각 계급의 밀도)
hist(test,freq=FALSE)
hist(test)
#  단계2) 히스토그램 시각화(각 계급의 밀도)
hist(test,freq=FALSE)
# 02. 다음과 같은 단계별로 히스토그램 시각화하시오.
#  단계1) 표준정규분포를 따르는 난수 1,000개 생성(힌트 : rnorm() 함수 이용)
test <- rnorm(1000,0,1)
#  단계2) 히스토그램 시각화(각 계급의 밀도)
hist(test,freq=FALSE)
hist(test)
shapiro.test(test)
# 실습데이터 파일 가져오기
gerwd
# 실습데이터 파일 가져오기
gerwd()
# 실습데이터 파일 가져오기
getwd()
dataset <- read.csv("../dataset.csv")
str(dataset)
# 1) 결측치 확인
summary(dataset)
# 2) 칼럼 기준 결측치 제거 subset()
dataset2 <- subset(dataset,is.na(price))
dataset2
summary(dataset2)
# 2) 칼럼 기준 결측치 제거 subset()
dataset2 <- subset(dataset,!(is.na(price))) #(dataset, 조건식)
summary(dataset2)
# 3) 전체 칼럼 기준 결측치 제거 : na.omit()
dataset2 <- na.omit(dataset)
summary(dataset2)
# 4) 결측치 처리 (0으로 대체)
dataset$price2 <- ifelse(is.na(dataset$price),0,dataset$price)
head(dataset,30)
dataset[c("price","price2")]
#5) 결측치 처리 (평균으로 대체)
dataset$price3 <- ifelse(is.na(dataset$price),mean(dataset$price,na.rm=T),dataset$price)
dataset[c("price","price3")]
#6) 통계적 방법 : 고객 유형별 NA 처리
# type : 1. 우수 2. 보통 3. 저조
# 1. 우수 : 8.75*1.5
# 2. 보통 : 8.75
# 3. 저조 : 8.75*0.5
dim(dataset)
type <- rep(1:3,100)
type
head(dataset)
dataset$type <- type
head(dataset)
nrow(dataset)
avg= mean(dataset$price)
price4 <-0
for(i in 1:nrow(dataset)){
if(is.na(dataset$price[i])){
if(dataset$type ==1){
price4[i] = avg * 1.5
}else if(dataset$type ==2)){
price4[i] = avg
}else{
price4[i] = avg * 0.5
}
}else {
price4[i] <- dataset$price
}
}
price4 <-0
for(i in 1:nrow(dataset)){
if(is.na(dataset$price[i])){
if(dataset$type ==1){
price4[i] = avg * 1.5
}else if(dataset$type ==2)){
price4[i] = avg
}else{
price4[i] = avg * 0.5
}
}else {
price4[i] <- dataset$price
}
}
avg= mean(dataset$price)
price4 <-0
for(i in 1:nrow(dataset)){
if(is.na(dataset$price[i])){
if(dataset$type == 1){
price4[i] = avg * 1.5
}else if(dataset$type == 2)){
price4[i] = avg
}else{
price4[i] = avg * 0.5
}
}else {
price4[i] <- dataset$price
}
}
for(i in 1:nrow(dataset)){
if(is.na(dataset$price[i])){
if(dataset$type == 1){
price4[i] = avg * 1.5
}else if(dataset$type == 2)){
price4[i] = avg
}else{
price4[i] = avg * 0.5
}
}else {
price4[i] <- dataset$price
}
}
head(dataset)
price4 <-0
for(i in 1:nrow(dataset)){
if(is.na(dataset$price[i])){
if(dataset$type == 1){
price4[i] = avg * 1.5
}else if(dataset$type == 2)){
price4[i] = avg
}else{
price4[i] = avg * 0.5
}
}else {
price4[i] <- dataset$price
}
}
for(i in 1:nrow(dataset)){
}
for(i in 1:nrow(dataset)){
if(is.na(dataset$price[i])){
}else {
price4[i] <- dataset$price
}
}
price4 <-0
for(i in 1:nrow(dataset)){
if(is.na(dataset$price[i])){
if(dataset$type[i] == 1){
price4[i] = avg * 1.5
}else if(dataset$type[i] == 2)){
price4[i] = avg
}else{
price4[i] = avg * 0.5
}
}else {
price4[i] <- dataset$price[i]
}
}
for(i in 1:nrow(dataset)){
if(dataset$type[i] == 1){
price4[i] = avg * 1.5
}else {
price4[i] <- dataset$price[i]
}
if(is.na(dataset$price[i])){
if(dataset$type[i] == 1){
price4[i] = avg * 1.5
}else {
price4[i] <- dataset$price[i]
}
}
SSasymp()
}
price4 <-0
for(i in 1:nrow(dataset)){
if(is.na(dataset$price[i])){
if(dataset$type[i] == 1){
price4[i] = avg * 1.5
}else {
price4[i] <- dataset$price[i]
}
}
}
price4 <-0
for(i in 1:nrow(dataset)){
if(is.na(dataset$price[i])){
if(dataset$type[i] == 1){
price4[i] = avg * 1.5
}
} else {
price4[i] <- dataset$price[i]
}
}
avg= mean(dataset$price)
price4 <-0
for(i in 1:nrow(dataset)){
if(is.na(dataset$price[i])){
if(dataset$type[i] == 1){
price4[i] = avg * 1.5
}else if (dataset$type[i] == 2){
price4[i] = avg
}else{
price4[i] = avg * 0.5
}
}else {
price4[i] <- dataset$price[i]
}
}
dim(price4)
price4 <-0
for(i in 1:nrow(dataset)){
if(is.na(dataset$price[i])){
if(dataset$type[i] == 1){
price4[i] = avg * 1.5
}else if (dataset$type[i] == 2){
price4[i] = avg
}else{
price4[i] = avg * 0.5
}
}else {
price4[i] <- dataset$price[i]
}
}
dim(price4)
table(gender)
# 2. 이상치 발견과 정제
#(1) 범주형(명목 , 서열) 극단치 처리
gender <- dataset$gender
gender
table(gender)
pie(table(gender))
dataset <- suset(dataset,gender==1 | gender==2)
dataset <- subset(dataset,gender==1 | gender==2)
#(2) 비율척도 연속형 이상치 처리
price <- dataset$price
boxplot(price)
boxplot(price)$stats
boxplot(price)$stats
# 이상치 정제
dataset2 <- dataset
price <- ifelse(datset$price >=2.1 & dataset$price <=7.9)
price <- ifelse(dataset$price >=2.1 & dataset$price <=7.9)
price <- subset(dataset , dataset$price >=2.1 & dataset$price <=7.9)
price <- subset(dataset2 , dataset$price >=2.1 & dataset$price <=7.9)
price
plot(price)
plot(price)
boxplot(price)
boxplot(price)$stats
price <- subset(dataset2 , dprice >=2.1 & price <=7.9)
price <- subset(dataset2 , price >=2.1 & price <=7.9)
price
boxplot(price)$stats
plot(dataset2$price)
plot(dataset2)
plot(dataset2$price)
# 이상치 정제
dataset2 <- dataset
dataset2 <- subset(dataset2 , price >=2.1 & price <=7.9)
plot(dataset2$price)
boxplot(price)$stats
boxplot(dataset2$price)$stats
# age 변수 이상치 처리
summary(dataset2$age)
dataset2 <- subset(dataset2.age>=20 $ age <=69)
dataset2 <- subset(dataset2, age>=20 $ age <=69)
dataset2 <- subset(dataset2, age>=20 $ age <=69)
dataset2 <- subset(dataset2, age>=20 & age <=69)
# 01. 본문에서 생성된 dataset2의 resident 칼럼을 대상으로 NA 값을 제거하시오.(힌트 : subset()함수 이용)
dataset2
# 01. 본문에서 생성된 dataset2의 resident 칼럼을 대상으로 NA 값을 제거하시오.(힌트 : subset()함수 이용)
dataset2$resident
datatset2 <- subset(dataset2,is.na(resident))
dataset2$resident
datatset2 <- subset(dataset2,!(is.na(resident)))
dataset2$resident
# 01. 본문에서 생성된 dataset2의 resident 칼럼을 대상으로 NA 값을 제거하시오.(힌트 : subset()함수 이용)
dataset2$resident
datatset3 <- subset(dataset2,!(is.na(resident)))
dataset3$resident
# 01. 본문에서 생성된 dataset2의 resident 칼럼을 대상으로 NA 값을 제거하시오.(힌트 : subset()함수 이용)
dataset2$resident
dataset2 <- subset(dataset2,!(is.na(resident)))
dataset2$resident
# 02. dataset2의 gender 칼럼을 대상으로 1->"남자", 2->"여자" 형태로 코딩 변경하여
# gender2 칼럼에 추가하고, 파이 차트로 결과를 확인하시오.
dataset2$gender2 <- ifelse(dataset2$gender == 1,"남자","여자")
pie(dataset2$gender2)
pie(dataset2$gender)
# 01. 본문에서 생성된 dataset2의 resident 칼럼을 대상으로 NA 값을 제거하시오.(힌트 : subset()함수 이용)
dataset2$resident
dataset2 <- subset(dataset2,!(is.na(resident)))
dataset2$resident
# 02. dataset2의 gender 칼럼을 대상으로 1->"남자", 2->"여자" 형태로 코딩 변경하여
# gender2 칼럼에 추가하고, 파이 차트로 결과를 확인하시오.
dataset2$gender2 <- ifelse(dataset2$gender == 1,"남자","여자")
dataset2$gender2
pie(table(dataset2$gender2))
# 04. ggplot2 패키지에서 제공하는 mpg 데이터셋을 대상으로 이상치를 발견하고, 제거하시오.
install.packages("ggplot2")
library(ggplot2)
mpg <- as.data.frame(mpg)
age3 <- 0
age3 <- 0
for(i in 1:nrow(dataset2)){
if(dataset2$age[i] <=30){
age3[i] = 1
}else if(dataset2$age[i] <=55 & dataset2$age[i] >=31 ){
age3[i] = 2
}else{
age3[i] = 3
}
}
dataset2$age3 <- age3
dataset2$age3
# 04. ggplot2 패키지에서 제공하는 mpg 데이터셋을 대상으로 이상치를 발견하고, 제거하시오.
install.packages("ggplot2")
mpg <- as.data.frame(mpg)
mpg
boxplot(mpg)
str(mpg)
summary(mpg)
boxplot(mpg$hwy)
boxplot(mpg$hwy)$stats
mpg <- subset(mpg,hwy>=12 $ hwy <=37)
mpg <- subset(mpg,hwy >=12 & hwy <=37)
mpg
boxplot(mpg$hwy)$stats
# 1) 데이터 가독성
table(dataset2$resident)
[dataset2$resident==1]
[dataset2$resident==1]<- "1.서울시"
dataset2[dataset2$resident==1]<- "1.서울시"
dataset2$resident2[dataset2$resident==1]<- "1.서울시"
dataset2$resident2
# 1) 데이터 가독성
table(dataset2$resident)
dataset2$resident2[dataset2$resident==5]<- "5.광주시"
# 1   2   3   4   5
# 102  46  22  13  34
dataset2$resident2[dataset2$resident==1]<- "1.서울시"
dataset2$resident2[dataset2$resident==2]<- "2.인천시"
dataset2$resident2[dataset2$resident==3]<- "3.대전시"
dataset2$resident2[dataset2$resident==4]<- "4.대구시"
dataset2$resident2[dataset2$resident==5]<- "5.광주시"
setwd("c:/Rwork/data")
new_data <- read.csv("new_data.csv", header=TRUE)
# 성별에 따른 거주지역 분포 현황
barplot(resident_gender, beside=T, horiz=T,
col = rainbow(5),
legend = row.names(resident_gender),
main = '성별에 따른 거주지역 분포 현황')
# 거주지역에 따른 성별 분포 현황
barplot(gender_resident, beside=T,
col=rep(c(2, 4),5), horiz=T,
legend=c("남자","여자"),
main = '거주지역별 성별 분포 현황')
# 2) 비율척도(연속) vs 명목척도(범주/서열)
# - 나이와 직업유형에 따른 시각화
install.packages("lattice")  # chap08
# 성별에 따른 거주지역 분포 현황
barplot(resident_gender, beside=T, horiz=T,
col = rainbow(5),
legend = row.names(resident_gender),
main = '성별에 따른 거주지역 분포 현황')
# 1) 명목척도(범주/서열) vs 명목척도(범주/서열)
# - 거주지역과 성별 칼럼 시각화
resident_gender <- table(new_data$resident2, new_data$gender2)
resident_gender
gender_resident <- table(new_data$gender2, new_data$resident2)
gender_resident
# 성별에 따른 거주지역 분포 현황
barplot(resident_gender, beside=T, horiz=T,
col = rainbow(5),
legend = row.names(resident_gender),
main = '성별에 따른 거주지역 분포 현황')
# 거주지역에 따른 성별 분포 현황
barplot(gender_resident, beside=T,
col=rep(c(2, 4),5), horiz=T,
legend=c("남자","여자"),
main = '거주지역별 성별 분포 현황')
# 2) 비율척도(연속) vs 명목척도(범주/서열)
# - 나이와 직업유형에 따른 시각화
install.packages("lattice")  # chap08
# 직업유형에 따른 나이 분포 현황
densityplot( ~ age, data=new_data, groups = job2,
plot.points=T, auto.key = T)
# 2) 비율척도(연속) vs 명목척도(범주/서열)
# - 나이와 직업유형에 따른 시각화
install.packages("lattice")  # chap08
library(lattice)
# 직업유형에 따른 나이 분포 현황
densityplot( ~ age, data=new_data, groups = job2,
plot.points=T, auto.key = T)
new_data
col(new_data)
colnames(new_data)
# (1) 성별에 따른 직급별 구매비용 분석
densityplot(~ price | factor(gender2), data=new_data,
groups = position2, plot.points=T, auto.key = T)
# (2) 직급에 따른 성별 구매비용 분석
densityplot(~ price | factor(position2), data=new_data,
groups = gender2, plot.points=T, auto.key = T)
# 4) 연속형 변수간의 상관분석
str(new_data)
age <- new_data$age
price <- new_data$price
cor(age,price,na.rm =T)
cor(age,price)
new_data2 <- na.omit(new_data)
age <- new_data2$age
price <- new_data$price
price <- new_data2$price
cor(age,price)
df <- data.frame(age,price)
cor(df)
plot(age ,price)
pie(dataset2$gender_
pie(dataset2$gender)
pie(dataset2$gender)
